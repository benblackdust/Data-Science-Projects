{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "4e94bdab",
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np \n",
    "import pandas as pd \n",
    "import matplotlib.pyplot as plt \n",
    "import psutil \n",
    "import time\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "e00621f5",
   "metadata": {},
   "outputs": [],
   "source": [
    "def generate_sensor_data(num_sensors, num_readings): return np.random.rand(num_sensors, num_readings)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "79f6bd20",
   "metadata": {},
   "outputs": [],
   "source": [
    "def process_data(data): return np.mean(data, axis=1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "f353ad2b",
   "metadata": {},
   "outputs": [],
   "source": [
    "num_sensors = 1000"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "98172eec",
   "metadata": {},
   "outputs": [],
   "source": [
    "num_readings = 100"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "bc54f634",
   "metadata": {},
   "outputs": [],
   "source": [
    "num_iterations = 50"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "23c2b3ed",
   "metadata": {},
   "outputs": [],
   "source": [
    "processing_times = [] \n",
    "for _ in range(num_iterations):\n",
    "    data = generate_sensor_data(num_sensors, num_readings)\n",
    "    start_time = time.time()\n",
    "    processed_data = process_data(data)\n",
    "    end_time = time.time()\n",
    "    processing_times.append(end_time - start_time)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "d894a9a8",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x432 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(10, 6)) \n",
    "plt.plot(processing_times)\n",
    "plt.title('Data Processing Time per Iteration') \n",
    "plt.xlabel('Iteration') \n",
    "plt.ylabel('Processing Time (seconds)') \n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "id": "b830a5ce",
   "metadata": {},
   "outputs": [],
   "source": [
    "def simulate_cpu_usage(duration): start_time = time.time() \n",
    "while time.time() - start_time < duration: pass\n",
    "def simulate_memory_usage(size_mb): return ' ' * (size_mb * 1024 * 1024)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "id": "e9c7affd",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x432 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "cpu_usage = []\n",
    "for _ in range(20): simulate_cpu_usage(0.1)\n",
    "cpu_usage.append(psutil.cpu_percent())\n",
    "plt.figure(figsize=(10,6))          \n",
    "plt.plot(cpu_usage)\n",
    "plt.title('CPU Usage Over Time')\n",
    "plt.xlabel('Time')\n",
    "plt.ylabel('CPU Usage (%)')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "id": "14d76b49",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x432 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "memory_usage = []\n",
    "for i in range(10): _ = simulate_memory_usage(100 * i)\n",
    "# Allocate memory in 100MB increments\n",
    "memory_usage.append(psutil.virtual_memory().percent)\n",
    "plt.figure(figsize=(10, 6))\n",
    "plt.plot(memory_usage)\n",
    "plt.title('Memory Usage Over Time')\n",
    "plt.xlabel('Time')\n",
    "plt.ylabel('Memory Usage (%)')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "ee995c21",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "aa8b977d",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "78486e6d",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.12"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
